/*-- -------------------------- -->
<---   Side By Side Reverse     -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {


	#sbsr-298 {
		padding: var(--sectionPadding);

		.cs-container {
			width: 100%;
			/* changes to 1280px at desktop */
			max-width: calc(550 / 16 * 1rem);
			margin: auto;
			display: flex;
			justify-content: center;
			align-items: center;
			flex-direction: column;
		}

		.cs-content {
			/* set text align to left if content needs to be left aligned */
			text-align: center;
			width: 100%;
			max-width: calc(522 / 16 * 1rem);
			display: flex;
			flex-direction: column;
			/* centers content horizontally, set to flex-start to left align */
			align-items: center;
		}

		.cs-topper {
			font-size: var(--topperFontSize);
			line-height: 1.2em;
			text-transform: uppercase;
			text-align: inherit;
			letter-spacing: 0.1em;
			font-weight: 700;
			color: var(--primary);
			margin-bottom: calc(4 / 16 * 1rem);
			display: block;
		}

		.cs-title {
			font-size: var(--headerFontSize);
			font-weight: 900;
			line-height: 1.2em;
			text-align: inherit;
			max-width: calc(700 / 16 * 1rem);
			margin: 0 0 calc(16 / 16 * 1rem) 0;
			color: var(--headerColor);
			position: relative;
		}

		.cs-text {
			font-size: var(--bodyFontSize);
			line-height: 1.5em;
			text-align: inherit;
			width: 100%;
			max-width: calc(650 / 16 * 1rem);
			margin: 0;
			color: var(--bodyTextColor);
		}

		.cs-text {
			/* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
			margin-bottom: calc(16 / 16 * 1rem);
			&:last-of-type {
				margin-bottom: calc(32 / 16 * 1rem);
			}
		}

		.cs-link {
			font-size: calc(20 / 16 * 1rem);
			font-weight: 700;
			text-decoration: none;
			color: var(--primary);
		}

		.cs-button-solid {
			font-size: calc(16 / 16 * 1rem);
			/* 46px - 56px */
			line-height: clamp(2.875rem, 5.5vw, 3.5rem);
			text-decoration: none;
			font-weight: 700;
			text-align: center;
			margin: 0;
			color: #fff;
			min-width: calc(150 / 16 * 1rem);
			padding: 0 calc(24 / 16 * 1rem);
			background-color: var(--primary);
			border-radius: calc(4 / 16 * 1rem);
			display: inline-block;
			position: relative;
			z-index: 1;
			/* prevents padding from adding to the width */
			box-sizing: border-box;

			&:before {
				content: '';
				position: absolute;
				height: 100%;
				width: 0%;
				background: #000;
				opacity: 1;
				top: 0;
				left: 0;
				z-index: -1;
				border-radius: calc(4 / 16 * 1rem);
				transition: width 0.3s;
			}

			&:hover {
				&:before {
					width: 100%;
				}
			}
		}

		.cs-image-group {
			width: 100%;
			max-width: calc(550 / 16 * 1rem);
			/* 78px - 108px */
			margin: 0 auto clamp(4.875rem, 16.5vw, 6.75rem);
			position: relative;
			display: block;
			/* width divided by height */
			aspect-ratio: 328/363;
		}

		.cs-picture {
			/* big background image */
			width: 100%;
			height: 100%;
			position: absolute;
			top: 0;
			left: 0;
			display: block;
			img {
				position: absolute;
				top: 0;
				left: 0;
				height: 100%;
				width: 100%;
				border-radius: calc(10 / 16 * 1rem);
				object-fit: cover;
			}
		}

		.cs-box {
			/* 204px - 326px & changes at desktop */
			width: clamp(12.75rem, 50vw, 20.375rem);
			height: clamp(12.75rem, 50vw, 20.375rem);
			border-radius: calc(10 / 16 * 1rem);
			overflow: hidden;
			display: flex;
			justify-content: center;
			align-items: center;
			flex-direction: column;
			position: absolute;
			left: 50%;
			/* 38px - 60px - wrapped in a calc function to make clamp values negative */
			bottom: calc(clamp(2.375rem, 7.9vw, 3.75rem) * -1);
			transform: translateX(-50%);
			z-index: 10;
		}

		.cs-box-picture {
			/* Background image for cs-box */
			width: 100%;
			height: 100%;
			background-color: #000;
			border-radius: calc(10 / 16 * 1rem);
			/* clips img corners and bg corners */
			overflow: hidden;
			position: absolute;
			top: 0;
			left: 0;
			display: block;
			z-index: -1;

			img {
				position: absolute;
				top: 0;
				left: 0;
				opacity: 0.65;
				height: 100%;
				width: 100%;
				object-fit: cover;
			}
		}

		.cs-number {
			/* 75px - 100px */
			font-size: clamp(4.6875rem, 8vw, 6.25rem);
			line-height: 1em;
			font-weight: 900;
			margin-bottom: calc(8 / 16 * 1rem);
			color: var(--headerColor);
			/* creates the transparent clipping text */
			mix-blend-mode: screen;
			display: block;
			z-index: 10;

			&:before {
				/* opaque white box - For mix-blend-mode to work, we need the 
                   white box inside the .cs-number, so we use a pseudo element.
                   We DON'T add a position to the cs-number so the pseudo positions
                   itself relative to the .cs-box, which has position relative. This
                   allows us to center to .cs-number pseudo inside the .cs-box */
				content: '';
				/* 184px - 294px & changes at desktop */
				width: clamp(11.5rem, 45vw, 18.375rem);
				height: clamp(11.5rem, 45vw, 18.375rem);
				opacity: 1;
				background-color: #fff;
				border-radius: calc(7 / 16 * 1rem);
				position: absolute;
				display: block;
				/* these next 3 properties are an old school way to center an absolutely
                   positioned element inside a relative position parent */
				top: 50%;
				left: 50%;
				transform: translate(-50%, -50%);
				z-index: -1;
			}
		}

		.cs-desc {
			/* 16px - 25px */
			font-size: clamp(1rem, 4vw, 1.5625rem);
			font-weight: 700;
			line-height: 1.2em;
			text-transform: lowercase;
			text-align: center;
			width: 80%;
			color: var(--headerColor);
			position: relative;
			z-index: 10;
		}
	}
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
	#sbsr-298 {
		/* aligns the button */
		text-align: left;
		.cs-container {
			max-width: calc(1280 / 16 * 1rem);
			/* set to horizontal arrangement */
			flex-direction: row;
			justify-content: space-between;
			gap: calc(160 / 16 * 1rem);
		}

		.cs-content {
			text-align: left;
			align-items: flex-start;
		}

		.cs-image-group {
			width: 40vw;
			max-width: calc(521 / 16 * 1rem);
			/* 520px - 672px */
			height: clamp(32.5rem, 51.9vw, 42rem);
			margin: 0;
			/* sends it to the right in the 2nd position */
			order: 2;
		}

		.cs-box {
			/* 251px - 325px */
			width: clamp(15.6875rem, 24.5vw, 20.3125rem);
			height: clamp(15.6875rem, 24.5vw, 20.3125rem);
			left: auto;
			transform: none;
			/* -52px to -102px */
			left: calc(clamp(3.25rem, 5.5vw + 1.6rem, 6.375rem) * -1);
			/* 62px - 80px */
			bottom: clamp(3.875rem, 6.2vw, 5rem);
		}

		.cs-number {
			&:before {
				/* 226px - 293px */
				width: clamp(14.125rem, 22.7vw, 18.3125rem);
				height: clamp(14.125rem, 22.7vw, 18.3125rem);
			}
		}
	}
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
	body.dark-mode {
		#sbsr-298 {
			.cs-topper {
				color: var(--secondaryLight);
			}

			.cs-title,
			.cs-text {
				color: var(--bodyTextColorWhite);
			}

			.cs-link {
				color: var(--secondaryLight);
			}

			.cs-text {
				opacity: 0.8;
			}

			.cs-button-solid {
				background-color: var(--secondaryLight);
				color: #1a1a1a;
			}
		}
	}
}




/*-- -------------------------- -->
<---         Services           -->
<--- -------------------------- -*/

/* Mobile */
@media only screen and (min-width: 0rem) {


    #services-218 {
        padding: var(--sectionPadding);

        .cs-container {
            width: 100%;
            /* changes to 1280px at tablet */
            max-width: calc(550 / 16 * 1rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }
        
        .cs-content {
            /* set text align to left if content needs to be left aligned */
            // text-align: left;
            width: 100%;
            max-width: 40.625rem;
            // margin-right: auto;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
			justify-content: center;
        }
        
        .cs-topper {
            font-size: var(--topperFontSize);
            line-height: 1.2em;
            text-transform: uppercase;
            text-align: inherit;
            letter-spacing: .1em;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: calc(4 / 16 * 1rem);
            display: block;
        }
        
        .cs-title {
            font-size: var(--headerFontSize);
            font-weight: 900;
            line-height: 1.2em;
            text-align: inherit;
            max-width: calc(700 / 16 * 1rem);
            margin: 0 0 calc(16 / 16 * 1rem) 0;
            color: var(--headerColor);
            position: relative;
			text-align: center;
			width: 100%;
        }
        
        .cs-text {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            max-width: calc(650 / 16 * 1rem);
            margin: 0;
            color: var(--bodyTextColor);
			text-align: center;
        }
        
        .cs-text {
            /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
            margin-bottom: calc(16 / 16 * 1rem);
            &:last-of-type {
                margin-bottom: calc(32 / 16 * 1rem);
            }
        }
        
        .cs-button-solid {
            font-size: calc(16 / 16 * 1rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
            font-weight: 700;
            text-align: center;
            margin: 0;
            color: #fff;
            min-width: calc(150 / 16 * 1rem);
            padding: 0 calc(24 / 16 * 1rem);
            background-color: var(--primary);
            border-radius: calc(4 / 16 * 1rem);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;
        
            &:before {
                content: '';
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                border-radius: calc(4 / 16 * 1rem);
                transition: width .3s;
            }
        
            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-card-group {
            width: 100%;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            gap: calc(32 / 16 * 1rem);
        }

        .cs-item {
            width: 100%;
            list-style: none;
            margin-right: calc(10 / 16 * 1rem);
            /* padding left and right changes on tablet */
            padding: calc(44 / 16 * 1rem) calc(32 / 16 * 1rem);
            /* prevents padding and border from affecting height and width */
            box-sizing: border-box;
            background-color: #FAFBFC;
            border: 1px solid #DAD9E3;
            border-radius: calc(5 / 16 * 1rem);
            position: relative;

            &:before {
                /* top right box */
                content: '';
                width: 45%;
                max-width: calc(180 / 16 * 1rem);
                height: 50%;
                max-height: calc(144 / 16 * 1rem);
                background: var(--primary);
                border-radius: calc(16 / 16 * 1rem);
                position: absolute;
                display: block;
                top: (10 / 16) * -1em;
                right: (10 / 16) * -1em;
                z-index: -1;
            }
        }

        .cs-icon {
            /* 60px - 77px */
            width: clamp(3.75rem, 7.6vw, 4.8125rem);
			margin: auto;
            height: auto;
            margin-bottom: calc(10 / 16 * 1rem);
            display: block;

        }

        .cs-h3 {
            /* 20px - 25px */
            font-size: clamp(1.25rem, 1.5vw, 1.5625rem);
            line-height: 1.2em;
            margin: 0;
            margin-bottom: calc(16 / 16 * 1rem);
            color: var(--headerColor);
            font-weight: bold;
			text-align: center;
        }

        .cs-item-text {
            font-size: calc(16 / 16 * 1rem);
            line-height: 1.5em;
            margin: 0;
            color: var(--bodyTextColor);
			text-align: center;
        }

        .cs-watermark {
            display: none;
        }
    }
}   

/* Tablet */
@media only screen and (min-width: 48rem) {
    #services-218 {
        .cs-container {
            max-width: calc(1280 / 16 * 1rem);
            position: relative;
        }

        .cs-content {
            width: 50%;
        }

        .cs-card-group {
            display: grid;
            grid-template-columns: repeat(12, 1fr);
        }

        .cs-item {
            grid-column: span 4;
            grid-row: span 1;
            margin: 0;
            /* makes each card the same height if you add or remove lines of text */
            align-self: stretch;
        }

        .cs-watermark {
            width: 30%;
            max-width: calc(224 / 16 * 1rem);
            height: auto;
            position: absolute;
            top: 0;
            right: 0;
            display: block;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #services-218 {
            .cs-title, .cs-text, .cs-h3, .cs-item-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-item {
                background-color: var(--medium);
                border: none;

                &:before {
                    background: var(--accent);
                }
            }

            .cs-icon {
                /* makes so bright it turns white */
                filter: brightness(3000%);
            }
        }
    }
}



/*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0em) {
	#sbs {
		padding: var(--sectionPadding);

		.cs-container {
			width: 100%;
			max-width: calc(1280 / 16 * 1rem);
			margin: auto;
			display: flex;
			justify-content: center;
			align-items: center;
			flex-direction: column;
			row-gap: calc(40 / 16 * 1rem);
		}

		.cs-left {
			/* scaling the font size with the view width */
			font-size: min(2.31vw, 0.7em);
			/* using ems so we can use font size to scale the whole section */
			width: calc(631 / 16 * 1em);
			height: calc(636 / 16 * 1em);
			position: relative;
		}

		.cs-picture {
			border-radius: calc(24 / 16 * 1em);
			/* clips img tag corners */
			overflow: hidden;
			position: absolute;
			display: block;
			img {
				position: absolute;
				top: 0;
				left: 0;
				height: 100%;
				width: 100%;
				/* makes image act like a background image */
				object-fit: cover;
			}
		}

		.cs-picture1 {
			width: calc(522 / 16 * 1em);
			height: calc(581 / 16 * 1em);
			left: 0;
			top: 0;

			&.picture-only{
				width: 100%;
				height:100%;
				box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 40px;
			}
		}

		.cs-picture2 {
			width: calc(414 / 16 * 1em);
			height: calc(400 / 16 * 1em);
			background-color: #fff;
			box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 40px;
			/* 6px - 12px */
			border: clamp(0.375em, 1.5vw, 0.75em) solid #fff;
			right: 0;
			bottom: 0;
		}

		.cs-right {
			margin: auto;
			max-width: calc(542 / 16 * 1rem);
		}

		.cs-topper {
			text-align: left;
			margin-bottom: calc(4 / 16 * 1rem);
		}

		.cs-title {
			text-align: left;
			max-width: calc(800 / 16 * 1rem);
		}

		.cs-text {
			text-align: left;
			max-width: calc(750 / 16 * 1rem);
			margin-bottom: calc(16 / 16 * 1rem);

			&:last-of-type {
				margin-bottom: calc(32 / 16 * 1rem);
			}
		}

		.cs-flex-group {
			/* 16px - 32px */
			padding: clamp(1rem, 3vw, 2rem);
			background-color: #f7f7f7;
			border-radius: calc(16 / 16 * 1rem);
			position: relative;
		}

		.cs-flex-p {
			/* 14px - 16px */
			font-size: clamp(0.875rem, 1.5vw, 1rem);
			line-height: 1.5em;
			margin: 0 0 calc(16 / 16 * 1rem);
			color: #353535;
		}

		.cs-name {
			font-size: calc(16 / 16 * 1rem);
			line-height: 1.2em;
			text-transform: uppercase;
			font-weight: bold;
			margin: 0 0 calc(4 / 16 * 1rem);
			color: var(--headerColor);
			display: block;
		}

		.cs-job {
			font-size: calc(14 / 16 * 1rem);
			line-height: 1.5em;
			color: #353535;
			display: block;
		}

		.cs-quote-icon {
			/* 60px - 136px */
			width: clamp(3.75rem, 10vw, 8.5rem);
			height: auto;
			position: absolute;
			bottom: calc(0 / 16 * 1rem);
			/* 16px - 32px */
			right: clamp(1rem, 4vw, 2rem);
		}

		.cs-button-solid {
			margin-top: calc(32 / 16 * 1rem);
		}
	}
}

/* Desktop - 1024px */
@media only screen and (min-width: 64em) {
	#sbs {
		.cs-container {
			flex-flow: row;
			justify-content: space-between;
			gap: calc(52 / 16 * 1rem);
		}

		.cs-left {
			font-size: min(1.2vw, 1em);
			flex: none;
		}

		.cs-right {
			margin: 0;
		}
	}
}

/* Dark Mode */
@media only screen and (min-width: 0em) {
	body.dark-mode {
		#sbs {
			.cs-left {
				&:before,
				&:after {
					background: var(--accent);
				}
			}

			.cs-picture2 {
				background-color: var(--dark);
				/* 6px - 12px */
				border: clamp(0.375em, 1.5vw, 0.75em) solid var(--dark);
			}

			.cs-topper {
				color: var(--primaryLight);
			}

			.cs-title,
			.cs-text,
			.cs-h3,
			.cs-flex-p,
			.cs-name {
				color: var(--bodyTextColorWhite);
			}

			.cs-flex-group {
				background-color: var(--accent);
			}

			.cs-job {
				color: var(--bodyTextColorWhite);
				opacity: 0.8;
			}

			.cs-quote-icon {
				opacity: 0.2;
			}
		}
	}
}